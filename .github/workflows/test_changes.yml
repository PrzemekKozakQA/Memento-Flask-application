name: build Docker container and run tests

on:
  push:
    branches-ignore:
      - main
    paths:
      - "app/**"
      - "Postman_tests/**"
      - "Dockerfile"
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Get branch name
        id: get_branch
        run: echo "branch_name=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag memento_test:latest
      - name: run Docker container
        run: docker run -p 5000:5000 -d memento_test
      - uses: actions/setup-node@v4
        with:
          node-version: 'latest'
      - name: Install Newman CLI
        run: npm install -g newman
      - name: Install Newman HTML reporter
        run: npm install -g newman-reporter-htmlextra
      - name: Run Postman API tests in Newman CLI
        id: postman_tests
        continue-on-error: true
        run: newman run "Postman_tests/Memento_application_integration_tests.postman_collection.json" -e "Postman_tests/Test_ENV.postman_environment.json" -r cli,htmlextra --reporter-htmlextra-export ./newman_test_reports/${{ steps.get_branch.outputs.branch_name }}_report.html
      - name: Upload newman html report
        uses: actions/upload-artifact@v4
        with:
          name: test_report_from_branch_${{ steps.get_branch.outputs.branch_name }}
          path: newman_test_reports
      - name: upload artifact
        uses: actions/upload-pages-artifact@v3
        with: 
          path: './newman_test_reports/'
      - name: test if succes
        if: steps.postman_tests.outcome != 'success'
        run: echo "postamn tests success"
      - name: if all success
        if: success()
        run: echo "all success"
  deploy:
    # Add a dependency to the build job
    needs: build

    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write
    
    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    runs-on: ubuntu-latest

    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        